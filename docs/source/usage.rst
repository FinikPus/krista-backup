.. _usage:

.. toctree::
  :maxdepth: 2
  :caption: Содержание:
  :hidden:

Использование
=============

.. _run_task:

Запуск заданий
-------------------------

Для запуска заданий вручную:

.. code:: bash

  KristaBackup.py run task_name

Для логгирования выполнения в терминал существует флаг ``-v/--verbose``:

.. code:: bash

  KristaBackup.py run task_name -v

.. _crontab_task:

Опции можно посмотреть выполнив ./KristaBackup.py --help.

Работа с crontab
----------------

Выполнение заданий можно автоматизировать добавлением в ``crontab``.
Для этого у них должен быть указан атрибут ``cron``, содержащий
время в формате ``cron``.

.. _crontab_add:

Добавление заданий в crontab
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: bash

  ./KristaBackup.py en task_name
  ./KristaBackup.py enable task_name

.. _crontab_del:

Удаление задания из crontab
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: bash

  ./KristaBackup.py dis task_name
  ./KristaBackup.py disable task_name

Также, все задания (которые указаны в ``config.yaml``) можно одновременно
добавить в ``crontab`` или удалить из него используя ключевое слово ``all``.

cron-расписания с заданиями хранятся в ``crontab`` пользователя,
который указан в конфигурации (по умолчанию -- ``root``).

.. _run_web:

Запуск веб-api или веб-приложения
---------------------------------

В приложение также встроен веб-модуль. С его помощью
можно просмотривать файлы логов и состояние триггер-файла,
если он используется.

Для запуска веб-приложения нужно выполнить следующую команду:

.. code:: bash

  ./KristaBackup.py run web

Для запуска веб-api нужно выполнить следующую команду:

.. code:: bash

  ./KristaBackup.py run webapi

По-умолчанию, приложение запускается на http://127.0.0.1:5555. Порт и хост можно поменять в config.yaml:

.. code:: yaml

  web:
    host: 0.0.0.0
    port: 333333

Опции можно посмотреть выполнив ./KristaBackup.py --help.

.. _user_utils:

Остановить приложение или аpi можно командами

.. code:: bash

  ./KristaBackup.py stop web
  ./KristaBackup.py stop webapi


Утилита для управления пользователями веб-приложения
----------------------------------------------------

Утилита поддерживает добавление, удаление и обновления свойств пользователей,
позволяет просматривать список пользователей, добавлять, удалять и редактировать пользователя.

.. code:: bash

  ./UsersUtils.py list
  ./UsersUtils.py add -u aaa -p passWord -m abcd@mail.com -a
  ./UsersUtils.py mod -u aaa -p passWord -m abcd@mail.com -a
  ./UsersUtils.py del -u aaa
  ./UsersUtils.py check -u aaa
  ./UsersUtils.py check -m abcd@mail.com

Использование:

.. code:: bash

  UsersUtils.py действие [-h] [-u USERNAME] [-m EMAIL] [-p PASSW] [-a]

  Опции:
  -u    имя пользователя
  -p    пароль
  -m    abcd@mail.com
  -a    включить флаг администратора

  Действия:
  list      вывести имя пользователя
  add       добавить пользователя (необходимо указать -u -p -m,
            параметр -a указывается опицонально)
  mod       изменить свойства пользователя заданного параметром -u,
            параметры -m -p меняются только если переданы,
            если не указать параметр -a, то флаг админа будет сброшен
  del       удалить пользователя -u
  check     проверить наличие пользователя по имени
            или адресу электронной почты
