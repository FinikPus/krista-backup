.. _cleaner:

Cleaner
=======

Выполняет ротацию бэкапов. 

Все ``exclusions`` применяются к пути относительно ``src_path``.
Например: если ``src_path`` имеет значение ``/var/lib/app``, то путь ``/var/lib/app/index/a.txt`` будет 
обрабатываться как ``./app/index/a.txt``.

Для ротации будет достаточно указать ``source`` (``tar`` или ``pgdump``), настроить частоту ротации в (``max_files`` или ``days``) и файлы,
которые требуется удалить, будут автоматически определяться по маске.

Параметры:
~~~~~~~~~~

.. csv-table:: 
   :widths: 15, 30, 20
   :header: "название", "описание", "значение"

   "max_files", "Максимальное количество файлов.", "целочисленное"
   "days", "Максимальный возраст бэкапа.", "целочисленное, в днях"
   "use_re_in_patterns", "Использовать регулярные выражения (или wildcard).", "False (стандартное значение)"
   "patterns", "Паттерны путей, по которым стоит также очистить файлы.", "[ ]"
   "dry", "Не удалять файлы при обработке (dryrun).", "False (стандартное значение)"


Пример:
~~~~~~~

.. code-block:: yaml

  cleaner_tarjob_0level_etc:
    descr: очистка каталога от файлов в зависимости от их количества
    max_files: 3
    days: 5
    source: tarjob_0level_etc
    type: cleaner

  tarjob_0level_etc:
    basename: etc
    check_level_list_only: 'False'
    compression: 3
    descr: бэкап файлов /etc 0-го уровня
    dest_path: /backup/app
    level: 0
    level_folders: 0,1,2
    src_path: /etc
    type: tar
    use_re_in_patterns: false

Примечание:
~~~~~~~~~~~

При наследовании от ``pgdump`` все файлы будут разбиты на группы по маске, которая включает в себя название базы, то есть ротация бэкапов 
каждой базы будет осуществлятся отдельно.
Пример: ``pgdump`` делает бэкап баз ``A`` и ``B``, cleaner является наследником ``pgdump`` и выполняет ротацию каждые 5 файлов. Тогда максимальное
количество файлов с бэкапами будет 10 (5 копий баз ``A`` и 5 копий баз ``B``).   

При наследовании от ``move_bkp_period`` частота ротации для каждого периода указывается отдельно.