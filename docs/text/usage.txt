Использование
*************


Запуск заданий
==============

Для запуска заданий вручную:

   KristaBackup.py run task_name

Для логгирования выполнения в терминал существует флаг "-v/--verbose":

   KristaBackup.py run task_name -v

Опции можно посмотреть выполнив ./KristaBackup.py --help.


Работа с crontab
================

Выполнение заданий можно автоматизировать добавлением в "crontab". Для
этого у них должен быть указан атрибут "cron", содержащий время в
формате "cron".


Добавление заданий в crontab
----------------------------

   ./KristaBackup.py en task_name
   ./KristaBackup.py enable task_name


Удаление задания из crontab
---------------------------

   ./KristaBackup.py dis task_name
   ./KristaBackup.py disable task_name

Также, все задания (которые указаны в "config.yaml") можно
одновременно добавить в "crontab" или удалить из него используя
ключевое слово "all".

cron-расписания с заданиями хранятся в "crontab" пользователя, который
указан в конфигурации (по умолчанию -- "root").


Запуск веб-api или веб-приложения
=================================

В приложение также встроен веб-модуль. С его помощью можно
просмотривать файлы логов и состояние триггер-файла, если он
используется.

Для запуска веб-приложения нужно выполнить следующую команду:

   ./KristaBackup.py run web

Для запуска веб-api нужно выполнить следующую команду:

   ./KristaBackup.py run webapi

По-умолчанию, приложение запускается на http://127.0.0.1:5555. Порт и
хост можно поменять в config.yaml:

   web:
     host: 0.0.0.0
     port: 333333

Опции можно посмотреть выполнив ./KristaBackup.py --help.

Остановить приложение или аpi можно командами

   ./KristaBackup.py stop web
   ./KristaBackup.py stop webapi


Утилита для управления пользователями веб-приложения
====================================================

Утилита поддерживает добавление, удаление и обновления свойств
пользователей, позволяет просматривать список пользователей,
добавлять, удалять и редактировать пользователя.

   ./UsersUtils.py list
   ./UsersUtils.py add -u aaa -p passWord -m abcd@mail.com -a
   ./UsersUtils.py mod -u aaa -p passWord -m abcd@mail.com -a
   ./UsersUtils.py del -u aaa
   ./UsersUtils.py check -u aaa
   ./UsersUtils.py check -m abcd@mail.com

Использование:

   UsersUtils.py действие [-h] [-u USERNAME] [-m EMAIL] [-p PASSW] [-a]

   Опции:
   -u    имя пользователя
   -p    пароль
   -m    abcd@mail.com
   -a    включить флаг администратора

   Действия:
   list      вывести имя пользователя
   add       добавить пользователя (необходимо указать -u -p -m,
             параметр -a указывается опицонально)
   mod       изменить свойства пользователя заданного параметром -u,
             параметры -m -p меняются только если переданы,
             если не указать параметр -a, то флаг админа будет сброшен
   del       удалить пользователя -u
   check     проверить наличие пользователя по имени
             или адресу электронной почты
